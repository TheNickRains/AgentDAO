/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "CCIPReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CCIPReceiver__factory>;
    getContractFactory(
      name: "IAny2EVMMessageReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAny2EVMMessageReceiver__factory>;
    getContractFactory(
      name: "IRouterClient",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRouterClient__factory>;
    getContractFactory(
      name: "Client",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Client__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "AgentSmartAccountFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AgentSmartAccountFactory__factory>;
    getContractFactory(
      name: "ISmartAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISmartAccount__factory>;
    getContractFactory(
      name: "ISmartAccountFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISmartAccountFactory__factory>;
    getContractFactory(
      name: "AgentSmartAccountFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AgentSmartAccountFactory__factory>;
    getContractFactory(
      name: "VotingHub",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingHub__factory>;
    getContractFactory(
      name: "ISmartAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISmartAccount__factory>;
    getContractFactory(
      name: "ISmartAccountFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISmartAccountFactory__factory>;
    getContractFactory(
      name: "ISmartAccount",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISmartAccount__factory>;
    getContractFactory(
      name: "VotingHub",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingHub__factory>;

    getContractAt(
      name: "CCIPReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CCIPReceiver>;
    getContractAt(
      name: "IAny2EVMMessageReceiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAny2EVMMessageReceiver>;
    getContractAt(
      name: "IRouterClient",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRouterClient>;
    getContractAt(
      name: "Client",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Client>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "AgentSmartAccountFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AgentSmartAccountFactory>;
    getContractAt(
      name: "ISmartAccount",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISmartAccount>;
    getContractAt(
      name: "ISmartAccountFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISmartAccountFactory>;
    getContractAt(
      name: "AgentSmartAccountFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AgentSmartAccountFactory>;
    getContractAt(
      name: "VotingHub",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingHub>;
    getContractAt(
      name: "ISmartAccount",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISmartAccount>;
    getContractAt(
      name: "ISmartAccountFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISmartAccountFactory>;
    getContractAt(
      name: "ISmartAccount",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISmartAccount>;
    getContractAt(
      name: "VotingHub",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingHub>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
