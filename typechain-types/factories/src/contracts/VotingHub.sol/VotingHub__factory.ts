/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  VotingHub,
  VotingHubInterface,
} from "../../../../src/contracts/VotingHub.sol/VotingHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "targetChain",
        type: "uint64",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChain",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "VoteExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "targetChain",
        type: "uint64",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "targetChain",
        type: "uint64",
      },
    ],
    name: "castVoteForSmartAccount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "chainToReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "setChainReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "userDelegations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161123238038061123283398101604081905261002f916100fb565b33816001600160a01b038116610060576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b03908116608052811661009057604051631e4fbdf760e01b815260006004820152602401610057565b610099816100ab565b506001600160a01b031660a05261012b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561010d57600080fd5b81516001600160a01b038116811461012457600080fd5b9392505050565b60805160a0516110d461015e600039600081816104b5015261081d01526000818161020f015261091101526110d46000f3fe60806040526004361061009c5760003560e01c8063715018a611610064578063715018a61461017757806385572ffb1461018c578063897c75f7146101ac5780638da5cb5b146101e2578063b0f479a114610200578063f2fde38b1461023357600080fd5b806301ffc9a7146100a1578063182518d7146100d65780634d84a900146100f857806357d4aeab1461010b5780635ca90bc614610164575b600080fd5b3480156100ad57600080fd5b506100c16100bc366004610aac565b610253565b60405190151581526020015b60405180910390f35b3480156100e257600080fd5b506100f66100f1366004610b0e565b61028a565b005b6100f6610106366004610b54565b6102cb565b34801561011757600080fd5b5061014c610126366004610b92565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b6040516001600160a01b0390911681526020016100cd565b6100f6610172366004610bc7565b61057e565b34801561018357600080fd5b506100f66108f2565b34801561019857600080fd5b506100f66101a7366004610c18565b610906565b3480156101b857600080fd5b5061014c6101c7366004610c52565b6001602052600090815260409020546001600160a01b031681565b3480156101ee57600080fd5b506000546001600160a01b031661014c565b34801561020c57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061014c565b34801561023f57600080fd5b506100f661024e366004610c6d565b610965565b60006001600160e01b031982166385572ffb60e01b148061028457506001600160e01b031982166301ffc9a760e01b145b92915050565b6102926109a0565b6001600160401b0391909116600090815260016020526040902080546001600160a01b0319166001600160a01b03909216919091179055565b60028260ff16111561031a5760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420766f74652063686f69636560681b60448201526064015b60405180910390fd5b6001600160401b0381166000908152600160205260409020546001600160a01b031661037e5760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606401610311565b6040805133602082015290810184905260ff83166060820152600090608001604051602081830303815290604052905046617a69036103f8576040805185815260ff851660208201526001600160401b038416818301529051339160008051602061107f833981519152919081900360600190a250505050565b6040805160a0810182526001600160401b03841660009081526001602052918220546001600160a01b031660c08201528060e0810160408051808303601f190181529181529082526020808301869052815160008082529181018352929091019190610486565b604080518082019091526000808252602082015281526020019060019003908161045f5790505b508152600060208083018290526040805191820181528282529283015290516396f4e9f960e01b8152919250907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396f4e9f99034906104f69088908790600401610ce6565b60206040518083038185885af1158015610514573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105399190610dbf565b6040805188815260ff881660208201526001600160401b038716818301529051919250339160008051602061107f8339815191529181900360600190a2505050505050565b60028260ff1611156105c85760405162461bcd60e51b8152602060048201526013602482015272496e76616c696420766f74652063686f69636560681b6044820152606401610311565b6001600160401b0381166000908152600160205260409020546001600160a01b031661062c5760405162461bcd60e51b815260206004820152601360248201527210da185a5b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606401610311565b604051632d9ad53d60e01b815233600482015284906001600160a01b03821690632d9ad53d90602401602060405180830381865afa158015610672573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106969190610dd8565b6106d35760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610311565b604080516001600160a01b038716602082015290810185905260ff84166060820152600090608001604051602081830303815290604052905046617a6903610760576040805186815260ff861660208201526001600160401b0385168183015290516001600160a01b0388169160008051602061107f833981519152919081900360600190a250506108ec565b6040805160a0810182526001600160401b03851660009081526001602052918220546001600160a01b031660c08201528060e0810160408051808303601f1901815291815290825260208083018690528151600080825291810183529290910191906107ee565b60408051808201909152600080825260208201528152602001906001900390816107c75790505b508152600060208083018290526040805191820181528282529283015290516396f4e9f960e01b8152919250907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396f4e9f990349061085e9089908790600401610ce6565b60206040518083038185885af115801561087c573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906108a19190610dbf565b6040805189815260ff891660208201526001600160401b0388168183015290519192506001600160a01b038a169160008051602061107f8339815191529181900360600190a2505050505b50505050565b6108fa6109a0565b61090460006109cd565b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610951576040516335fdcccd60e21b8152336004820152602401610311565b61096261095d82610f8f565b610a1d565b50565b61096d6109a0565b6001600160a01b03811661099757604051631e4fbdf760e01b815260006004820152602401610311565b610962816109cd565b6000546001600160a01b031633146109045760405163118cdaa760e01b8152336004820152602401610311565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060008360600151806020019051810190610a3a919061103b565b9250925092507fff729aacf030a2d06d5bfa8295963adffd644a575380d0b31c526e095bffcea28460000151856020015185604051610a9e939291909283526001600160401b039190911660208301526001600160a01b0316604082015260600190565b60405180910390a150505050565b600060208284031215610abe57600080fd5b81356001600160e01b031981168114610ad657600080fd5b9392505050565b80356001600160401b0381168114610af457600080fd5b919050565b6001600160a01b038116811461096257600080fd5b60008060408385031215610b2157600080fd5b610b2a83610add565b91506020830135610b3a81610af9565b809150509250929050565b60ff8116811461096257600080fd5b600080600060608486031215610b6957600080fd5b833592506020840135610b7b81610b45565b9150610b8960408501610add565b90509250925092565b60008060408385031215610ba557600080fd5b8235610bb081610af9565b9150610bbe60208401610add565b90509250929050565b60008060008060808587031215610bdd57600080fd5b8435610be881610af9565b9350602085013592506040850135610bff81610b45565b9150610c0d60608601610add565b905092959194509250565b600060208284031215610c2a57600080fd5b81356001600160401b03811115610c4057600080fd5b820160a08185031215610ad657600080fd5b600060208284031215610c6457600080fd5b610ad682610add565b600060208284031215610c7f57600080fd5b8135610ad681610af9565b634e487b7160e01b600052604160045260246000fd5b6000815180845260005b81811015610cc657602081850181015186830182015201610caa565b506000602082860101526020601f19601f83011685010191505092915050565b600060406001600160401b038516835260208181850152845160a083860152610d1260e0860182610ca0565b905081860151603f1980878403016060880152610d2f8383610ca0565b88860151888203830160808a01528051808352908601945060009350908501905b80841015610d8257845180516001600160a01b0316835286015186830152938501936001939093019290860190610d50565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550610db18187610ca0565b9a9950505050505050505050565b600060208284031215610dd157600080fd5b5051919050565b600060208284031215610dea57600080fd5b81518015158114610ad657600080fd5b604080519081016001600160401b0381118282101715610e1c57610e1c610c8a565b60405290565b60405160a081016001600160401b0381118282101715610e1c57610e1c610c8a565b604051601f8201601f191681016001600160401b0381118282101715610e6c57610e6c610c8a565b604052919050565b600082601f830112610e8557600080fd5b81356001600160401b03811115610e9e57610e9e610c8a565b610eb1601f8201601f1916602001610e44565b818152846020838601011115610ec657600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f830112610ef457600080fd5b813560206001600160401b03821115610f0f57610f0f610c8a565b610f1d818360051b01610e44565b82815260069290921b84018101918181019086841115610f3c57600080fd5b8286015b84811015610f845760408189031215610f595760008081fd5b610f61610dfa565b8135610f6c81610af9565b81528185013585820152835291830191604001610f40565b509695505050505050565b600060a08236031215610fa157600080fd5b610fa9610e22565b82358152610fb960208401610add565b602082015260408301356001600160401b0380821115610fd857600080fd5b610fe436838701610e74565b60408401526060850135915080821115610ffd57600080fd5b61100936838701610e74565b6060840152608085013591508082111561102257600080fd5b5061102f36828601610ee3565b60808301525092915050565b60008060006060848603121561105057600080fd5b835161105b81610af9565b60208501516040860151919450925061107381610b45565b80915050925092509256fe782db4ac1f6e32fb165faa387bd0ba1458e2b584a0bb26ec8803f3be2c5fc578a264697066735822122065497002c53f3f8682f348d766574ed3f892a9d1f7c58e1e45c9eb395cfb6ef964736f6c63430008140033";

type VotingHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingHub__factory extends ContractFactory {
  constructor(...args: VotingHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VotingHub> {
    return super.deploy(_router, overrides || {}) as Promise<VotingHub>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): VotingHub {
    return super.attach(address) as VotingHub;
  }
  override connect(signer: Signer): VotingHub__factory {
    return super.connect(signer) as VotingHub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingHubInterface {
    return new utils.Interface(_abi) as VotingHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingHub {
    return new Contract(address, _abi, signerOrProvider) as VotingHub;
  }
}
