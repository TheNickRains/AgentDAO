/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  VotingHub,
  VotingHubInterface,
} from "../../../../src/contracts/core/VotingHub";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
    ],
    name: "ChainNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "InvalidRouter",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
    ],
    name: "InvalidVoteChoice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageSendFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ChainReceiverSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "targetChain",
        type: "uint64",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChain",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "VoteExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "targetChain",
        type: "uint64",
      },
    ],
    name: "castVote",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        internalType: "uint64",
        name: "targetChain",
        type: "uint64",
      },
    ],
    name: "castVoteForSmartAccount",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "chainToReceiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "chainId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "setChainReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "userDelegations",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawStuckTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620017c9380380620017c9833981016040819052620000349162000151565b806001600160a01b03811662000065576040516335fdcccd60e21b8152600060048201526024015b60405180910390fd5b6001600160a01b03166080526200007c3362000101565b600180556002805460ff191690556001600160a01b038116620000e25760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420726f7574657220616464726573730000000000000000000060448201526064016200005c565b6001600160a01b03811660a052620000fa3362000101565b5062000183565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200016457600080fd5b81516001600160a01b03811681146200017c57600080fd5b9392505050565b60805160a051611612620001b7600039600081816105aa01526108ec0152600081816102a801526109f701526116126000f3fe6080604052600436106100ec5760003560e01c8063715018a61161008a5780638da5cb5b116100595780638da5cb5b1461027b578063b0f479a114610299578063f2fde38b146102cc578063fdff785c146102ec57600080fd5b8063715018a6146101fb5780638456cb591461021057806385572ffb14610225578063897c75f71461024557600080fd5b80634d84a900116100c65780634d84a9001461016457806357d4aeab146101775780635c975abb146101d05780635ca90bc6146101e857600080fd5b806301ffc9a7146100f8578063182518d71461012d5780633f4ba83a1461014f57600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50610118610113366004610f83565b61030c565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b5061014d610148366004610fe5565b610343565b005b34801561015b57600080fd5b5061014d6103e3565b61014d61017236600461102b565b6103f5565b34801561018357600080fd5b506101b8610192366004611069565b60046020908152600092835260408084209091529082529020546001600160a01b031681565b6040516001600160a01b039091168152602001610124565b3480156101dc57600080fd5b5060025460ff16610118565b61014d6101f636600461109e565b61067d565b34801561020757600080fd5b5061014d6109ca565b34801561021c57600080fd5b5061014d6109dc565b34801561023157600080fd5b5061014d6102403660046110ef565b6109ec565b34801561025157600080fd5b506101b8610260366004611129565b6003602052600090815260409020546001600160a01b031681565b34801561028757600080fd5b506000546001600160a01b03166101b8565b3480156102a557600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006101b8565b3480156102d857600080fd5b5061014d6102e7366004611144565b610a4b565b3480156102f857600080fd5b5061014d610307366004611161565b610ac1565b60006001600160e01b031982166385572ffb60e01b148061033d57506001600160e01b031982166301ffc9a760e01b145b92915050565b61034b610ccb565b6001600160a01b03811661038257604051639cfea58360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b6001600160401b03821660008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590519092917f1edefa5bdff092c7bb0bcfa72b32ce53be9e2585dcb5bf60384e4d04721110a291a35050565b6103eb610ccb565b6103f3610d25565b565b6103fd610d77565b610405610dd0565b60028260ff16111561042f5760405163018c193160e61b815260ff83166004820152602401610379565b6001600160401b0381166000908152600360205260409020546001600160a01b03166104795760405163172ced9d60e11b81526001600160401b0382166004820152602401610379565b46617a69036104c2576040805184815260ff841660208201526001600160401b03831681830152905133916000805160206115bd833981519152919081900360600190a261066f565b6040805133602082015290810184905260ff8316606082015260009060800160408051808303601f1901815260a0830182526001600160401b03851660009081526003602052918220546001600160a01b031660c08401529250908060e0810160408051808303601f19018152918152908252602080830186905281516000808252918101835292909101919061057b565b60408051808201909152600080825260208201528152602001906001900390816105545790505b508152600060208083018290526040805191820181528282529283015290516396f4e9f960e01b8152919250907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396f4e9f99034906105eb9088908790600401611208565b60206040518083038185885af1158015610609573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061062e91906112e1565b6040805188815260ff881660208201526001600160401b03871681830152905191925033916000805160206115bd8339815191529181900360600190a25050505b61067860018055565b505050565b610685610d77565b61068d610dd0565b60028260ff1611156106b75760405163018c193160e61b815260ff83166004820152602401610379565b6001600160401b0381166000908152600360205260409020546001600160a01b03166107015760405163172ced9d60e11b81526001600160401b0382166004820152602401610379565b604051632d9ad53d60e01b815233600482015284906001600160a01b03821690632d9ad53d90602401602060405180830381865afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b91906112fa565b6107a85760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606401610379565b46617a69036107fb576040805185815260ff851660208201526001600160401b0384168183015290516001600160a01b038716916000805160206115bd833981519152919081900360600190a2506109bb565b604080516001600160a01b038716602082015290810185905260ff8416606082015260009060800160408051808303601f1901815260a0830182526001600160401b03861660009081526003602052918220546001600160a01b031660c08401529250908060e0810160408051808303601f1901815291815290825260208083018690528151600080825291810183529290910191906108bd565b60408051808201909152600080825260208201528152602001906001900390816108965790505b508152600060208083018290526040805191820181528282529283015290516396f4e9f960e01b8152919250907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396f4e9f990349061092d9089908790600401611208565b60206040518083038185885af115801561094b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061097091906112e1565b6040805189815260ff891660208201526001600160401b0388168183015290519192506001600160a01b038a16916000805160206115bd8339815191529181900360600190a2505050505b6109c460018055565b50505050565b6109d2610ccb565b6103f36000610e16565b6109e4610ccb565b6103f3610e66565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a37576040516335fdcccd60e21b8152336004820152602401610379565b610a48610a43826114b1565b610ea3565b50565b610a53610ccb565b6001600160a01b038116610ab85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610379565b610a4881610e16565b610ac9610ccb565b6001600160a01b038216610b135760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152606401610379565b6001600160a01b038316610bba576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b6e576040519150601f19603f3d011682016040523d82523d6000602084013e610b73565b606091505b50509050806109c45760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610379565b6040516001600160a01b03838116602483015260448201839052600091829186169060640160408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b17905251610c14919061155d565b6000604051808303816000865af19150503d8060008114610c51576040519150601f19603f3d011682016040523d82523d6000602084013e610c56565b606091505b5091509150818015610c80575080511580610c80575080806020019051810190610c8091906112fa565b610cc45760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610379565b5050505050565b6000546001600160a01b031633146103f35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610379565b610d2d610f3a565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600260015403610dc95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610379565b6002600155565b60025460ff16156103f35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610379565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e6e610dd0565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d5a3390565b610eab610dd0565b60008060008360600151806020019051810190610ec89190611579565b9250925092507fff729aacf030a2d06d5bfa8295963adffd644a575380d0b31c526e095bffcea28460000151856020015185604051610f2c939291909283526001600160401b039190911660208301526001600160a01b0316604082015260600190565b60405180910390a150505050565b60025460ff166103f35760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610379565b600060208284031215610f9557600080fd5b81356001600160e01b031981168114610fad57600080fd5b9392505050565b80356001600160401b0381168114610fcb57600080fd5b919050565b6001600160a01b0381168114610a4857600080fd5b60008060408385031215610ff857600080fd5b61100183610fb4565b9150602083013561101181610fd0565b809150509250929050565b60ff81168114610a4857600080fd5b60008060006060848603121561104057600080fd5b8335925060208401356110528161101c565b915061106060408501610fb4565b90509250925092565b6000806040838503121561107c57600080fd5b823561108781610fd0565b915061109560208401610fb4565b90509250929050565b600080600080608085870312156110b457600080fd5b84356110bf81610fd0565b93506020850135925060408501356110d68161101c565b91506110e460608601610fb4565b905092959194509250565b60006020828403121561110157600080fd5b81356001600160401b0381111561111757600080fd5b820160a08185031215610fad57600080fd5b60006020828403121561113b57600080fd5b610fad82610fb4565b60006020828403121561115657600080fd5b8135610fad81610fd0565b60008060006060848603121561117657600080fd5b833561118181610fd0565b9250602084013561119181610fd0565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60005b838110156111d35781810151838201526020016111bb565b50506000910152565b600081518084526111f48160208601602086016111b8565b601f01601f19169290920160200192915050565b600060406001600160401b038516835260208181850152845160a08386015261123460e08601826111dc565b905081860151603f198087840301606088015261125183836111dc565b88860151888203830160808a01528051808352908601945060009350908501905b808410156112a457845180516001600160a01b0316835286015186830152938501936001939093019290860190611272565b5060608901516001600160a01b031660a08901526080890151888203830160c08a015295506112d381876111dc565b9a9950505050505050505050565b6000602082840312156112f357600080fd5b5051919050565b60006020828403121561130c57600080fd5b81518015158114610fad57600080fd5b604080519081016001600160401b038111828210171561133e5761133e6111a2565b60405290565b60405160a081016001600160401b038111828210171561133e5761133e6111a2565b604051601f8201601f191681016001600160401b038111828210171561138e5761138e6111a2565b604052919050565b600082601f8301126113a757600080fd5b81356001600160401b038111156113c0576113c06111a2565b6113d3601f8201601f1916602001611366565b8181528460208386010111156113e857600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261141657600080fd5b813560206001600160401b03821115611431576114316111a2565b61143f818360051b01611366565b82815260069290921b8401810191818101908684111561145e57600080fd5b8286015b848110156114a6576040818903121561147b5760008081fd5b61148361131c565b813561148e81610fd0565b81528185013585820152835291830191604001611462565b509695505050505050565b600060a082360312156114c357600080fd5b6114cb611344565b823581526114db60208401610fb4565b602082015260408301356001600160401b03808211156114fa57600080fd5b61150636838701611396565b6040840152606085013591508082111561151f57600080fd5b61152b36838701611396565b6060840152608085013591508082111561154457600080fd5b5061155136828601611405565b60808301525092915050565b6000825161156f8184602087016111b8565b9190910192915050565b60008060006060848603121561158e57600080fd5b835161159981610fd0565b6020850151604086015191945092506115b18161101c565b80915050925092509256fe782db4ac1f6e32fb165faa387bd0ba1458e2b584a0bb26ec8803f3be2c5fc578a26469706673582212209badc2bfa7c95629d30c53193cdb12578c2092beac0df9c1e9b30f3af174ffb364736f6c63430008140033";

type VotingHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingHub__factory extends ContractFactory {
  constructor(...args: VotingHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VotingHub> {
    return super.deploy(_router, overrides || {}) as Promise<VotingHub>;
  }
  override getDeployTransaction(
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, overrides || {});
  }
  override attach(address: string): VotingHub {
    return super.attach(address) as VotingHub;
  }
  override connect(signer: Signer): VotingHub__factory {
    return super.connect(signer) as VotingHub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingHubInterface {
    return new utils.Interface(_abi) as VotingHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingHub {
    return new Contract(address, _abi, signerOrProvider) as VotingHub;
  }
}
